spring.application.name=Booking Service
server.port=8081

logging.level.root=INFO

#MySQL DB Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER}

spring.jpa.database-platform=${SPRING_JPA_PLATFORM}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_DDL_AUTO}

inventory.service.url=${INVENTORY_SERVICE_URL}

#Kafka
spring.kafka.bootstrapservers=${SPRING_KAFKA_BOOTSTRAPSERVERS}
spring.kafka.template.default-topic=${SPRING_KAFKA_TEMPLATE_DEFAULT_TOPIC}
spring.kafka.producer.key-serializer=${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER}
spring.kafka.producer.value-serializer=${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER}

#Open API
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-doc.path=/v3/api-docs

#MCP Server
spring.ai.mcp.server.enabled=true
spring.ai.mcp.server.stdio=false
spring.ai.mcp.server.name=inventory-service-mcp
spring.ai.mcp.server.type=SYNC
#spring.main.banner-mode=off
spring.ai.mcp.server.transport=HTTP
spring.ai.mcp.server.http.sse-endpoint=/mcp/sse
spring.ai.mcp.server.capabilities.tool=true
spring.ai.mcp.server.capabilities.resource=true
spring.ai.mcp.server.capabilities.prompt=true
spring.ai.mcp.server.capabilities.completion=true